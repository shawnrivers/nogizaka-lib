{"version":3,"sources":["components/molecules/CdCard/CdCard.module.scss","components/molecules/TabMenu/TabMenu.module.scss","components/organisms/CdCardList/CdCardList.module.scss","components/atoms/Background/TopLeftBackground/TopLeftBackground.module.scss","components/templates/Cds/Cds.module.scss","components/atoms/Buttons/TabButton/TabButton.module.scss","utils/constants.ts","components/molecules/CdCard/index.tsx","components/organisms/CdCardList/index.tsx","containers/CdsContainer/store/actionTypes.ts","components/atoms/Background/TopLeftBackground/index.tsx","components/atoms/Buttons/TabButton/index.tsx","components/atoms/Icons/MenuDownIcon.tsx","components/atoms/Icons/MenuUpIcon.tsx","components/molecules/TabMenu/index.tsx","components/templates/Cds/index.tsx","utils/fetch.ts","containers/CdsContainer/index.tsx","containers/CdsContainer/store/actions.ts","containers/CdsContainer/store/reducers.ts","stores/appStore.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","text","number","title","container","artwork","toggle-button","toggle-button-icon","menu","toggle-button-text","dropdown","pattern-one","triangle-cut","button","CdsCurrentPage","CdType","SongType","FocusPerformersType","FetchStatus","Card","posed","div","enter","y","opacity","exit","CdCard","props","react","className","styles","src","cd","artworks","urls","medium","alt","cdsActionTypes","CardListContainer","staggerChildren","beforeChildren","afterChildren","CdCardList","react_pose_es","cds","length","currentPage","Single","key","map","CdCard_CdCard","toString","TopLeftBackground","TabButton","Link","to","concat","children","onClick","handleHideDropdown","MenuDownIcon","width","height","viewBox","d","fill","MenuUpIcon","MenuIcon","DropDownMenu","TabMenu","_React$useState","React","_React$useState2","Object","slicedToArray","isDropdownOpen","toggleDropDown","handleToggleDropdown","MenuUpIcon_MenuUpIcon","MenuDownIcon_MenuDownIcon","items","item","TabButton_TabButton","pages","Album","Cds","TopLeftBackground_TopLeftBackground","TabMenu_TabMenu","CdCardList_CdCardList","fetchGet","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","wrap","_context","prev","next","fetch","abrupt","sent","json","stop","this","_x","apply","arguments","CdsContianer","connect","state","dispatch","fetchSingles","data","sortedData","type","FETCH_SINGLES_PENDING","slice","sort","itemA","itemB","FETCH_SINGLES_FULFILLED","payload","t0","FETCH_SINGLES_REJECTED","console","log","fetchAlbums","_ref2","_callee2","_context2","FETCH_ALBUMS_PENDING","FETCH_ALBUMS_FULFILLED","FETCH_ALBUMS_REJECTED","_x2","singles","fetchStatus","None","albums","match","params","cdsContents","cdsCurrentPage","getCurrentPageCds","Cds_Cds","initialCdsState","rootReducer","combineReducers","undefined","action","objectSpread","Pending","Rejected","Fulfilled","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","store","createStore","App","react_default","createElement","es","BrowserRouter","basename","process","Switch","Route","exact","path","component","Redirect","from","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.876aa68e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"CdCard_text__1xy3x\",\"number\":\"CdCard_number__2jOJd\",\"title\":\"CdCard_title__jadns\",\"container\":\"CdCard_container__2hHGw\",\"artwork\":\"CdCard_artwork__19UBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"TabMenu_toggle-button__1jb9k\",\"toggle-button-icon\":\"TabMenu_toggle-button-icon__1j57g\",\"menu\":\"TabMenu_menu__6WjUJ\",\"toggle-button-text\":\"TabMenu_toggle-button-text__13iP_\",\"dropdown\":\"TabMenu_dropdown__3hq_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CdCardList_container__2x2wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pattern-one\":\"TopLeftBackground_pattern-one__1dqSM\",\"triangle-cut\":\"TopLeftBackground_triangle-cut__1KqQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cds_container__3im-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TabButton_button__1zth4\"};","export enum CdsCurrentPage {\r\n  Single = 'singles',\r\n  Album = 'albums',\r\n}\r\n\r\nexport enum CdType {\r\n  A = 'A',\r\n  B = 'B',\r\n  C = 'C',\r\n  D = 'D',\r\n  T = 'T',\r\n  L = 'Limited',\r\n}\r\n\r\nexport enum SongType {\r\n  None = 'none',\r\n  Title = 'title',\r\n  Coupling = 'coupling',\r\n  Under = 'under',\r\n  Unit = 'unit',\r\n  Solo = 'solo',\r\n  FirstGeneration = 'first generation',\r\n  SecondGeneration = 'second generation',\r\n  ThirdGeneration = 'third generation',\r\n}\r\n\r\nexport enum FocusPerformersType {\r\n  Center = 'center',\r\n  Solo = 'solo',\r\n  Unit = 'unit',\r\n  None = '',\r\n}\r\n\r\nexport enum FetchStatus {\r\n  None,\r\n  Rejected,\r\n  Pending,\r\n  Fulfilled,\r\n}\r\n","import * as React from 'react';\r\nimport posed from 'react-pose';\r\nimport styles from './CdCard.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\n\r\nconst Card = posed.div({\r\n  enter: { y: 0, opacity: 1 },\r\n  exit: { y: 50, opacity: 0 },\r\n});\r\n\r\ninterface ICdProps {\r\n  cd: ISingle | IAlbum;\r\n}\r\n\r\nexport const CdCard = (props: ICdProps) => (\r\n  <Card className={styles.container}>\r\n    <img className={styles.artwork} src={props.cd.artworks[0].urls.medium} alt={props.cd.title} />\r\n    <div className={styles.text}>\r\n      <span>\r\n        <span className={styles.number}>{props.cd.number}.</span>\r\n        <span className={styles.title}>{props.cd.title}</span>\r\n      </span>\r\n    </div>\r\n  </Card>\r\n);\r\n","import * as React from 'react';\r\nimport posed, { PoseGroup } from 'react-pose';\r\nimport styles from './CdCardList.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { CdCard } from '../../molecules/CdCard';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\n\r\nconst CardListContainer = posed.div({\r\n  enter: { staggerChildren: 30, beforeChildren: true },\r\n  exit: { staggerChildren: 25, afterChildren: true },\r\n});\r\n\r\ninterface ICdCardProps {\r\n  cds: (ISingle | IAlbum)[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const CdCardList = (props: ICdCardProps) => (\r\n  <PoseGroup>\r\n    {props.cds.length !== 0 &&\r\n      (props.currentPage === CdsCurrentPage.Single ? (\r\n        <CardListContainer key=\"single-cards\" className={styles.container}>\r\n          {props.cds.map((cd: ISingle | IAlbum) => (\r\n            <CdCard key={props.currentPage + cd.number.toString()} cd={cd} />\r\n          ))}\r\n        </CardListContainer>\r\n      ) : (\r\n        <CardListContainer key=\"album-cards\" className={styles.container}>\r\n          {props.cds.map((cd: ISingle | IAlbum) => (\r\n            <CdCard key={props.currentPage + cd.number.toString()} cd={cd} />\r\n          ))}\r\n        </CardListContainer>\r\n      ))}\r\n  </PoseGroup>\r\n);\r\n","export enum cdsActionTypes {\r\n  FETCH_SINGLES = 'FETCH_SINGLES',\r\n  FETCH_SINGLES_PENDING = 'FETCH_SINGLES_PENDING',\r\n  FETCH_SINGLES_REJECTED = 'FETCH_SINGLES_REJECTED',\r\n  FETCH_SINGLES_FULFILLED = 'FETCH_SINGLES_FULFILLED',\r\n  FETCH_ALBUMS = 'FETCH_ALBUMS',\r\n  FETCH_ALBUMS_PENDING = 'FETCH_ALBUMS_PENDING',\r\n  FETCH_ALBUMS_REJECTED = 'FETCH_ALBUMS_REJECTED',\r\n  FETCH_ALBUMS_FULFILLED = 'FETCH_ALBUMS_FULFILLED',\r\n}\r\n","import * as React from 'react';\r\nimport styles from './TopLeftBackground.module.scss';\r\n\r\nexport const TopLeftBackground = () => (\r\n  <div className={styles['pattern-one']}>\r\n    <div className={styles['triangle-cut']} />\r\n  </div>\r\n);\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './TabButton.module.scss';\r\nimport { CdsCurrentPage } from '../../../../utils/constants';\r\n\r\ninterface ITabButtonProps {\r\n  children: CdsCurrentPage;\r\n  handleHideDropdown(): void;\r\n}\r\n\r\nexport const TabButton = (props: ITabButtonProps) => (\r\n  <Link to={`/cds/${props.children}`}>\r\n    <button className={styles.button} onClick={props.handleHideDropdown}>\r\n      {props.children}\r\n    </button>\r\n  </Link>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuDownIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuUpIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\nimport posed, { PoseGroup } from 'react-pose';\r\nimport styles from './TabMenu.module.scss';\r\nimport { TabButton } from '../../atoms/Buttons/TabButton';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\nimport { MenuDownIcon } from '../../atoms/Icons/MenuDownIcon';\r\nimport { MenuUpIcon } from '../../atoms/Icons/MenuUpIcon';\r\n\r\nconst MenuIcon = posed.div({\r\n  enter: { opacity: 1 },\r\n  exit: { opacity: 0 },\r\n});\r\n\r\nconst DropDownMenu = posed.div({\r\n  enter: {\r\n    opacity: 1,\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    y: -20,\r\n  },\r\n});\r\n\r\ninterface ITabMenuProps {\r\n  items: CdsCurrentPage[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const TabMenu = (props: ITabMenuProps) => {\r\n  const [isDropdownOpen, toggleDropDown] = React.useState(false);\r\n\r\n  const handleToggleDropdown = React.useCallback(() => {\r\n    toggleDropDown(!isDropdownOpen);\r\n  }, [toggleDropDown, isDropdownOpen]);\r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <button className={styles['toggle-button']} onClick={handleToggleDropdown}>\r\n        <span className={styles['toggle-button-text']}>{props.currentPage}</span>\r\n        <div className={styles['toggle-button-icon']}>\r\n          <PoseGroup>\r\n            {isDropdownOpen ? (\r\n              <MenuIcon key=\"menu-up\">\r\n                <MenuUpIcon />\r\n              </MenuIcon>\r\n            ) : (\r\n              <MenuIcon key=\"menu-down\">\r\n                <MenuDownIcon />\r\n              </MenuIcon>\r\n            )}\r\n          </PoseGroup>\r\n        </div>\r\n      </button>\r\n      <PoseGroup>\r\n        {isDropdownOpen && (\r\n          <DropDownMenu key=\"drop-down-menu\" className={styles.dropdown}>\r\n            {props.items.map((item: CdsCurrentPage) => (\r\n              <li key={item}>\r\n                <TabButton handleHideDropdown={handleToggleDropdown}>{item}</TabButton>\r\n              </li>\r\n            ))}\r\n          </DropDownMenu>\r\n        )}\r\n      </PoseGroup>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport styles from './Cds.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { CdCardList } from '../../organisms/CdCardList';\r\nimport { TopLeftBackground } from '../../atoms/Background/TopLeftBackground';\r\nimport { TabMenu } from '../../molecules/TabMenu';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\n\r\ninterface ICdsProps {\r\n  cds: (ISingle | IAlbum)[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nconst pages = [CdsCurrentPage.Single, CdsCurrentPage.Album];\r\n\r\nexport const Cds = (props: ICdsProps) => (\r\n  <div className={styles.container}>\r\n    <TopLeftBackground />\r\n    <TabMenu items={pages} currentPage={props.currentPage} />\r\n    <CdCardList cds={props.cds} currentPage={props.currentPage} />\r\n  </div>\r\n);\r\n","export const fetchGet = async (url: string): Promise<any> => (await fetch(url)).json();\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Cds } from '../../components/templates/Cds';\r\nimport { fetchSingles, fetchAlbums } from './store/actions';\r\nimport { CdsCurrentPage, FetchStatus } from '../../utils/constants';\r\nimport { ISingle } from '../../models/ISingle';\r\nimport { IAlbum } from '../../models/IAlbum';\r\nimport { Dispatch } from 'redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { IRootState } from '../../stores/state';\r\nimport { ICdsState } from './store/reducers';\r\n\r\ntype IMatchParams = {\r\n  type: CdsCurrentPage;\r\n};\r\n\r\ninterface ICdsContainerProps extends RouteComponentProps<IMatchParams> {\r\n  cds: ICdsState;\r\n  currentPage: CdsCurrentPage;\r\n  fetchSingles(): void;\r\n  fetchAlbums(): void;\r\n}\r\n\r\nconst getCurrentPageCds = (cdsCurrentPage: CdsCurrentPage, cds: ICdsState): (ISingle | IAlbum)[] => {\r\n  switch (cdsCurrentPage) {\r\n    case CdsCurrentPage.Single:\r\n      return cds.singles.data;\r\n    case CdsCurrentPage.Album:\r\n      return cds.albums.data;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nconst CdsContainer = (props: ICdsContainerProps) => {\r\n  React.useEffect(() => {\r\n    if (props.cds.singles.fetchStatus === FetchStatus.None) {\r\n      props.fetchSingles();\r\n    }\r\n    if (props.cds.albums.fetchStatus === FetchStatus.None) {\r\n      props.fetchAlbums();\r\n    }\r\n  }, []);\r\n\r\n  const currentPage = props.match.params.type;\r\n  const cdsContents = React.useMemo(() => getCurrentPageCds(currentPage, props.cds), [currentPage, props.cds]);\r\n\r\n  return <Cds cds={cdsContents} currentPage={currentPage} />;\r\n};\r\n\r\nexport const CdsContianer = connect(\r\n  (state: IRootState) => ({\r\n    cds: state.cds,\r\n  }),\r\n  (dispatch: Dispatch<any>) => ({\r\n    fetchSingles: () => dispatch(fetchSingles()),\r\n    fetchAlbums: () => dispatch(fetchAlbums()),\r\n  }),\r\n)(CdsContainer);\r\n","import { cdsActionTypes } from './actionTypes';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { Dispatch } from 'react';\r\nimport { fetchGet } from '../../../utils/fetch';\r\n\r\nexport type cdsActions =\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED;\r\n      payload: ISingle[];\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED;\r\n      payload: IAlbum[];\r\n    };\r\n\r\nexport const fetchSingles = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch({ type: cdsActionTypes.FETCH_SINGLES_PENDING });\r\n\r\n  try {\r\n    const data = await fetchGet(\r\n      'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/singles.json',\r\n    );\r\n\r\n    const sortedData = data.slice().sort((itemA: ISingle, itemB: ISingle) => itemB.number - itemA.number);\r\n\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n\r\nexport const fetchAlbums = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch({ type: cdsActionTypes.FETCH_ALBUMS_PENDING });\r\n  try {\r\n    const data = await fetchGet(\r\n      'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/albums.json',\r\n    );\r\n\r\n    const sortedData = data.slice().sort((itemA: IAlbum, itemB: IAlbum) => itemB.number - itemA.number);\r\n\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n","import { cdsActions } from './actions';\r\nimport { cdsActionTypes } from './actionTypes';\r\nimport { FetchStatus } from '../../../utils/constants';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\n\r\nexport type ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus;\r\n    data: ISingle[];\r\n  };\r\n  albums: {\r\n    fetchStatus: FetchStatus;\r\n    data: IAlbum[];\r\n  };\r\n};\r\n\r\nexport const initialCdsState: ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n  albums: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n};\r\n\r\nexport const cdsReducer = (state: ICdsState = initialCdsState, action: cdsActions) => {\r\n  switch (action.type) {\r\n    case cdsActionTypes.FETCH_SINGLES_PENDING:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_REJECTED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_FULFILLED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_PENDING:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_REJECTED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_FULFILLED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cdsReducer } from '../containers/CdsContainer/store/reducers';\r\nimport { IRootState } from './state';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nconst rootReducer: Reducer<IRootState> = combineReducers({\r\n  cds: cdsReducer,\r\n});\r\n\r\n// For Redux devtool in Chrome.\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = applyMiddleware(promise(), thunk);\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(middleware));\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { CdsContianer } from './containers/CdsContainer';\r\nimport './App.scss';\r\nimport { store } from './stores/appStore';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/cds/:type\" component={CdsContianer} />\r\n            <Redirect from=\"/\" to=\"/cds/singles\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}