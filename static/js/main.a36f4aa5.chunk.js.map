{"version":3,"sources":["components/molecules/CdCard/CdCard.module.scss","components/atoms/Background/TopLeftBackground/TopLeftBackground.module.scss","components/atoms/ImagePlaceholder/ImagePlaceholder.module.scss","components/atoms/Buttons/TabButton/TabButton.module.scss","components/organisms/CdCardList/CdCardList.module.scss","components/molecules/TabMenu/TabMenu.module.scss","utils/constants.ts","components/atoms/ImagePlaceholder/index.tsx","components/molecules/CdCard/index.tsx","components/organisms/CdCardList/index.tsx","containers/CdsContainer/store/actions.ts","components/atoms/Background/TopLeftBackground/index.tsx","components/atoms/Buttons/TabButton/index.tsx","components/atoms/Icons/MenuDownIcon.tsx","components/atoms/Icons/MenuUpIcon.tsx","components/molecules/TabMenu/index.tsx","utils/hooks.ts","components/templates/Cds/index.tsx","utils/fetch.ts","apis/SinglesAPI.ts","apis/AlbumsAPI.ts","containers/CdsContainer/index.tsx","containers/CdsContainer/store/reducers.ts","stores/appStore.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","text","container","artwork-container","artwork","pattern-one","triangle-cut","button","enter","enter-active","exit","exit-active","toggle-button","toggle-button-icon","menu","toggle-button-text","dropdown","CdsCurrentPage","CdType","SongType","FocusPerformersType","FetchStatus","ImagePlaceholder","react","className","styles","CdCard","props","React","forceCheck","artworks","small","cd","urls","medium","large","lib_default","a","placeholder","ImagePlaceholder_ImagePlaceholder","offset","src","srcSet","concat","SMALL_IMAGE_WIDTH","MEDIUM_IMAGE_WIDTH","LARGE_IMAGE_WIDTH","alt","title","number","CdsActionTypes","CdCardList","singles","length","albums","react_transition_group","in","currentPage","Single","timeout","classNames","enterActive","exitActive","unmountOnExit","map","single","CdCard_CdCard","key","toString","Album","album","TopLeftBackground","TabButton","Link","to","children","onClick","handleHideDropdown","MenuDownIcon","width","height","viewBox","d","fill","MenuUpIcon","TabMenu","ref","handler","_React$useState","_React$useState2","Object","slicedToArray","isDropdownOpen","toggleDropDown","handleToggleDropdown","dropdownRef","listener","event","current","contains","target","document","addEventListener","removeEventListener","MenuUpIcon_MenuUpIcon","MenuDownIcon_MenuDownIcon","items","item","TabButton_TabButton","pages","fetchGet","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","fetch","abrupt","sent","json","stop","this","_x","apply","arguments","convertSingleResponse","singleResponse","release","shopping","songs","behindPerformers","fetchSingles","singlesResponse","convertedSingles","convertAlbumResponse","albumResponse","fetchAlbums","albumsResponse","convertedAlbums","CdsContainer","connect","state","cds","dispatch","getSingles","sortedSingles","type","FETCH_SINGLES_PENDING","slice","sort","itemA","itemB","Date","getTime","FETCH_SINGLES_FULFILLED","payload","t0","FETCH_SINGLES_REJECTED","console","log","getAlbums","_ref2","_callee2","data","sortedData","_context2","FETCH_ALBUMS_PENDING","FETCH_ALBUMS_FULFILLED","FETCH_ALBUMS_REJECTED","_x2","fetchStatus","None","TopLeftBackground_TopLeftBackground","TabMenu_TabMenu","match","params","CdCardList_CdCardList","initialCdsState","rootReducer","combineReducers","undefined","action","objectSpread","Pending","Rejected","Fulfilled","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","store","createStore","App","react_default","createElement","es","BrowserRouter","basename","process","Switch","Route","exact","path","component","Redirect","from","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","href","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a36f4aa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"CdCard_text__1xy3x\",\"container\":\"CdCard_container__2hHGw\",\"artwork-container\":\"CdCard_artwork-container__2sTJp\",\"artwork\":\"CdCard_artwork__19UBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pattern-one\":\"TopLeftBackground_pattern-one__1dqSM\",\"triangle-cut\":\"TopLeftBackground_triangle-cut__1KqQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImagePlaceholder_container__34YbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TabButton_button__1zth4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CdCardList_container__2x2wK\",\"enter\":\"CdCardList_enter__2ipZC\",\"enter-active\":\"CdCardList_enter-active__1uXhY\",\"exit\":\"CdCardList_exit__2oxtE\",\"exit-active\":\"CdCardList_exit-active__2vYoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"TabMenu_toggle-button__1jb9k\",\"toggle-button-icon\":\"TabMenu_toggle-button-icon__1j57g\",\"menu\":\"TabMenu_menu__6WjUJ\",\"toggle-button-text\":\"TabMenu_toggle-button-text__13iP_\",\"dropdown\":\"TabMenu_dropdown__3hq_O\",\"enter\":\"TabMenu_enter__1szuV\",\"enter-active\":\"TabMenu_enter-active__3AiJE\",\"exit\":\"TabMenu_exit__1Pw9u\",\"exit-active\":\"TabMenu_exit-active__3uare\"};","export enum CdsCurrentPage {\r\n  Single = 'singles',\r\n  Album = 'albums',\r\n}\r\n\r\nexport enum CdType {\r\n  A = 'A',\r\n  B = 'B',\r\n  C = 'C',\r\n  D = 'D',\r\n  T = 'T',\r\n  L = 'Limited',\r\n}\r\n\r\nexport enum SongType {\r\n  None = 'none',\r\n  Title = 'title',\r\n  Coupling = 'coupling',\r\n  Under = 'under',\r\n  Unit = 'unit',\r\n  Solo = 'solo',\r\n  FirstGeneration = 'first generation',\r\n  SecondGeneration = 'second generation',\r\n  ThirdGeneration = 'third generation',\r\n}\r\n\r\nexport enum FocusPerformersType {\r\n  Center = 'center',\r\n  Solo = 'solo',\r\n  Unit = 'unit',\r\n  None = '',\r\n}\r\n\r\nexport enum FetchStatus {\r\n  None,\r\n  Rejected,\r\n  Pending,\r\n  Fulfilled,\r\n}\r\n","import * as React from 'react';\r\nimport styles from './ImagePlaceholder.module.scss';\r\n\r\nexport const ImagePlaceholder = () => <div className={styles.container} />;\r\n","import * as React from 'react';\r\nimport styles from './CdCard.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport LazyLoad, { forceCheck } from 'react-lazyload';\r\nimport { ImagePlaceholder } from '../../atoms/ImagePlaceholder';\r\n\r\nconst SMALL_IMAGE_WIDTH = 200;\r\nconst MEDIUM_IMAGE_WIDTH = 300;\r\nconst LARGE_IMAGE_WIDTH = 450;\r\n\r\ninterface ICdProps {\r\n  cd: ISingle | IAlbum;\r\n}\r\n\r\nexport const CdCard = (props: ICdProps) => {\r\n  React.useEffect(() => {\r\n    forceCheck();\r\n  });\r\n\r\n  const artworks = {\r\n    small: props.cd.artworks[0].urls.small,\r\n    medium: props.cd.artworks[0].urls.medium,\r\n    large: props.cd.artworks[0].urls.large,\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <LazyLoad placeholder={<ImagePlaceholder />} offset={100}>\r\n        <div className={styles['artwork-container']}>\r\n          <img\r\n            className={styles.artwork}\r\n            src={artworks.medium}\r\n            srcSet={`${artworks.small} ${SMALL_IMAGE_WIDTH * 2}w, ${artworks.medium} ${MEDIUM_IMAGE_WIDTH * 2}w, ${\r\n              artworks.large\r\n            } ${LARGE_IMAGE_WIDTH * 2}w`}\r\n            alt={props.cd.title}\r\n          />\r\n        </div>\r\n      </LazyLoad>\r\n      <div className={styles.text}>\r\n        {props.cd.number}. {props.cd.title}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './CdCardList.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { CdCard } from '../../molecules/CdCard';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\n\r\ninterface ICdCardProps {\r\n  singles: ISingle[];\r\n  albums: IAlbum[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const CdCardList = (props: ICdCardProps) => {\r\n  if (props.singles.length !== 0 || props.albums.length !== 0) {\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={props.currentPage === CdsCurrentPage.Single}\r\n          timeout={300}\r\n          classNames={{\r\n            enter: styles['enter'],\r\n            enterActive: styles['enter-active'],\r\n            exit: styles['exit'],\r\n            exitActive: styles['exit-active'],\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.container}>\r\n            {props.singles.map((single: ISingle) => (\r\n              <CdCard key={CdsCurrentPage.Single + single.number.toString()} cd={single} />\r\n            ))}\r\n          </div>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={props.currentPage === CdsCurrentPage.Album}\r\n          timeout={300}\r\n          classNames={{\r\n            enter: styles['enter'],\r\n            enterActive: styles['enter-active'],\r\n            exit: styles['exit'],\r\n            exitActive: styles['exit-active'],\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.container}>\r\n            {props.albums.map((album: IAlbum) => (\r\n              <CdCard key={CdsCurrentPage.Album + album.number.toString()} cd={album} />\r\n            ))}\r\n          </div>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { Dispatch } from 'react';\r\nimport { fetchSingles } from '../../../apis/SinglesAPI';\r\nimport { fetchAlbums } from '../../../apis/AlbumsAPI';\r\n\r\nexport enum CdsActionTypes {\r\n  FETCH_SINGLES_PENDING = 'FETCH_SINGLES_PENDING',\r\n  FETCH_SINGLES_REJECTED = 'FETCH_SINGLES_REJECTED',\r\n  FETCH_SINGLES_FULFILLED = 'FETCH_SINGLES_FULFILLED',\r\n  FETCH_ALBUMS_PENDING = 'FETCH_ALBUMS_PENDING',\r\n  FETCH_ALBUMS_REJECTED = 'FETCH_ALBUMS_REJECTED',\r\n  FETCH_ALBUMS_FULFILLED = 'FETCH_ALBUMS_FULFILLED',\r\n}\r\n\r\nexport type CdsActions =\r\n  | {\r\n      type: CdsActionTypes.FETCH_SINGLES_PENDING;\r\n    }\r\n  | {\r\n      type: CdsActionTypes.FETCH_SINGLES_REJECTED;\r\n    }\r\n  | {\r\n      type: CdsActionTypes.FETCH_SINGLES_FULFILLED;\r\n      payload: ISingle[];\r\n    }\r\n  | {\r\n      type: CdsActionTypes.FETCH_ALBUMS_PENDING;\r\n    }\r\n  | {\r\n      type: CdsActionTypes.FETCH_ALBUMS_REJECTED;\r\n    }\r\n  | {\r\n      type: CdsActionTypes.FETCH_ALBUMS_FULFILLED;\r\n      payload: IAlbum[];\r\n    };\r\n\r\nexport const getSingles = () => async (dispatch: Dispatch<CdsActions>): Promise<void> => {\r\n  dispatch({ type: CdsActionTypes.FETCH_SINGLES_PENDING });\r\n\r\n  try {\r\n    const singles = await fetchSingles();\r\n\r\n    const sortedSingles = singles\r\n      .slice()\r\n      .sort((itemA: ISingle, itemB: ISingle) => new Date(itemB.release).getTime() - new Date(itemA.release).getTime());\r\n\r\n    dispatch({\r\n      type: CdsActionTypes.FETCH_SINGLES_FULFILLED,\r\n      payload: sortedSingles,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CdsActionTypes.FETCH_SINGLES_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n\r\nexport const getAlbums = () => async (dispatch: Dispatch<CdsActions>): Promise<void> => {\r\n  dispatch({ type: CdsActionTypes.FETCH_ALBUMS_PENDING });\r\n\r\n  try {\r\n    const data = await fetchAlbums();\r\n\r\n    const sortedData = data\r\n      .slice()\r\n      .sort((itemA: IAlbum, itemB: IAlbum) => new Date(itemB.release).getTime() - new Date(itemA.release).getTime());\r\n\r\n    dispatch({\r\n      type: CdsActionTypes.FETCH_ALBUMS_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CdsActionTypes.FETCH_ALBUMS_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport styles from './TopLeftBackground.module.scss';\r\n\r\nexport const TopLeftBackground = () => (\r\n  <div className={styles['pattern-one']}>\r\n    <div className={styles['triangle-cut']} />\r\n  </div>\r\n);\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './TabButton.module.scss';\r\nimport { CdsCurrentPage } from '../../../../utils/constants';\r\n\r\ninterface ITabButtonProps {\r\n  children: CdsCurrentPage;\r\n  handleHideDropdown(): void;\r\n}\r\n\r\nexport const TabButton = (props: ITabButtonProps) => (\r\n  <Link to={`/cds/${props.children}`}>\r\n    <button className={styles.button} onClick={props.handleHideDropdown}>\r\n      {props.children}\r\n    </button>\r\n  </Link>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuDownIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuUpIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './TabMenu.module.scss';\r\nimport { TabButton } from '../../atoms/Buttons/TabButton';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\nimport { MenuDownIcon } from '../../atoms/Icons/MenuDownIcon';\r\nimport { MenuUpIcon } from '../../atoms/Icons/MenuUpIcon';\r\nimport { useOnClickOutside } from '../../../utils/hooks';\r\ninterface ITabMenuProps {\r\n  items: CdsCurrentPage[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const TabMenu = (props: ITabMenuProps) => {\r\n  const [isDropdownOpen, toggleDropDown] = React.useState(false);\r\n\r\n  const handleToggleDropdown = React.useCallback(() => {\r\n    toggleDropDown(!isDropdownOpen);\r\n  }, [toggleDropDown, isDropdownOpen]);\r\n\r\n  const dropdownRef = React.useRef(null);\r\n\r\n  useOnClickOutside(dropdownRef, () => {\r\n    toggleDropDown(false);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.menu} ref={dropdownRef}>\r\n      <button className={styles['toggle-button']} onClick={handleToggleDropdown}>\r\n        <span className={styles['toggle-button-text']}>{props.currentPage}</span>\r\n        <div className={styles['toggle-button-icon']}>\r\n          {isDropdownOpen ? (\r\n            <div key=\"menu-up\">\r\n              <MenuUpIcon />\r\n            </div>\r\n          ) : (\r\n            <div key=\"menu-down\">\r\n              <MenuDownIcon />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </button>\r\n      <CSSTransition\r\n        in={isDropdownOpen}\r\n        timeout={200}\r\n        classNames={{\r\n          enter: styles['enter'],\r\n          enterActive: styles['enter-active'],\r\n          exit: styles['exit'],\r\n          exitActive: styles['exit-active'],\r\n        }}\r\n        unmountOnExit\r\n      >\r\n        <div className={styles.dropdown}>\r\n          {props.items.map((item: CdsCurrentPage) => (\r\n            <li key={item}>\r\n              <TabButton handleHideDropdown={handleToggleDropdown}>{item}</TabButton>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nexport const useOnClickOutside = (ref: React.MutableRefObject<any>, handler: (event: Event) => void) => {\r\n  React.useEffect(() => {\r\n    const listener = (event: Event) => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener('mousedown', listener);\r\n    document.addEventListener('touchstart', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n      document.removeEventListener('touchstart', listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import * as React from 'react';\r\nimport { ICdsState } from '../../../containers/CdsContainer/store/reducers';\r\nimport { CdCardList } from '../../organisms/CdCardList';\r\nimport { TopLeftBackground } from '../../atoms/Background/TopLeftBackground';\r\nimport { TabMenu } from '../../molecules/TabMenu';\r\nimport { CdsCurrentPage, FetchStatus } from '../../../utils/constants';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ntype MatchParams = {\r\n  type: CdsCurrentPage;\r\n};\r\n\r\ninterface ICdsProps extends RouteComponentProps<MatchParams> {\r\n  cds: ICdsState;\r\n  getSingles(): void;\r\n  getAlbums(): void;\r\n}\r\n\r\nconst pages = [CdsCurrentPage.Single, CdsCurrentPage.Album];\r\n\r\nexport const Cds = (props: ICdsProps) => {\r\n  React.useEffect(() => {\r\n    if (props.cds.singles.fetchStatus === FetchStatus.None) {\r\n      props.getSingles();\r\n    }\r\n    if (props.cds.albums.fetchStatus === FetchStatus.None) {\r\n      props.getAlbums();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <TopLeftBackground />\r\n      <TabMenu items={pages} currentPage={props.match.params.type} />\r\n      <CdCardList\r\n        singles={props.cds.singles.data}\r\n        albums={props.cds.albums.data}\r\n        currentPage={props.match.params.type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const fetchGet = async (url: string): Promise<any> => (await fetch(url)).json();\r\n","import { fetchGet } from '../utils/fetch';\r\nimport { SingleResponse } from './responseTypes';\r\nimport { ISingle } from '../models/ISingle';\r\n\r\nconst convertSingleResponse = (singleResponse: SingleResponse): ISingle => {\r\n  const { number, title, release, artworks, shopping, songs, behindPerformers } = singleResponse;\r\n\r\n  return {\r\n    number,\r\n    title,\r\n    release,\r\n    artworks,\r\n    shopping,\r\n    songs,\r\n    behindPerformers,\r\n  };\r\n};\r\n\r\nexport const fetchSingles = async (): Promise<ISingle[]> => {\r\n  const singlesResponse: SingleResponse[] = await fetchGet(\r\n    'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/singles.json',\r\n  );\r\n\r\n  const convertedSingles = singlesResponse.map(singleResponse => convertSingleResponse(singleResponse));\r\n\r\n  return convertedSingles;\r\n};\r\n","import { fetchGet } from '../utils/fetch';\r\nimport { AlbumResponse } from './responseTypes';\r\nimport { IAlbum } from '../models/IAlbum';\r\n\r\nconst convertAlbumResponse = (albumResponse: AlbumResponse): IAlbum => {\r\n  const { number, title, release, artworks, shopping, songs } = albumResponse;\r\n\r\n  return {\r\n    number,\r\n    title,\r\n    release,\r\n    artworks,\r\n    shopping,\r\n    songs,\r\n  };\r\n};\r\n\r\nexport const fetchAlbums = async (): Promise<IAlbum[]> => {\r\n  const albumsResponse: AlbumResponse[] = await fetchGet(\r\n    'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/albums.json',\r\n  );\r\n\r\n  const convertedAlbums = albumsResponse.map(albumResponse => convertAlbumResponse(albumResponse));\r\n\r\n  return convertedAlbums;\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { Cds } from '../../components/templates/Cds';\r\nimport { getSingles, getAlbums } from './store/actions';\r\nimport { Dispatch } from 'redux';\r\nimport { IRootState } from '../../stores/state';\r\n\r\nconst mapStateToProps = (state: IRootState) => ({\r\n  cds: state.cds,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n  getSingles: () => dispatch(getSingles()),\r\n  getAlbums: () => dispatch(getAlbums()),\r\n});\r\n\r\nexport const CdsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Cds);\r\n","import { CdsActions, CdsActionTypes } from './actions';\r\nimport { FetchStatus } from '../../../utils/constants';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\n\r\nexport type ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus;\r\n    data: ISingle[];\r\n  };\r\n  albums: {\r\n    fetchStatus: FetchStatus;\r\n    data: IAlbum[];\r\n  };\r\n};\r\n\r\nexport const initialCdsState: ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n  albums: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n};\r\n\r\nexport const CdsReducer = (state: ICdsState = initialCdsState, action: CdsActions): ICdsState => {\r\n  switch (action.type) {\r\n    case CdsActionTypes.FETCH_SINGLES_PENDING:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case CdsActionTypes.FETCH_SINGLES_REJECTED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case CdsActionTypes.FETCH_SINGLES_FULFILLED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    case CdsActionTypes.FETCH_ALBUMS_PENDING:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case CdsActionTypes.FETCH_ALBUMS_REJECTED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case CdsActionTypes.FETCH_ALBUMS_FULFILLED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { CdsReducer } from '../containers/CdsContainer/store/reducers';\r\nimport { IRootState } from './state';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nconst rootReducer: Reducer<IRootState> = combineReducers({\r\n  cds: CdsReducer,\r\n});\r\n\r\n// For Redux devtool in Chrome.\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = applyMiddleware(promise(), thunk);\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(middleware));\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { CdsContainer } from './containers/CdsContainer';\r\nimport './App.scss';\r\nimport { store } from './stores/appStore';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/cds/:type\" component={CdsContainer} />\r\n            <Redirect from=\"/\" to=\"/cds/singles\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}