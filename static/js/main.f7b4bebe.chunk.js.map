{"version":3,"sources":["components/molecules/TabMenu/TabMenu.module.scss","components/organisms/CdCardList/CdCardList.module.scss","components/atoms/Background/TopLeftBackground/TopLeftBackground.module.scss","components/templates/Cds/Cds.module.scss","components/atoms/Buttons/TabButton/TabButton.module.scss","utils/constants.ts","components/molecules/CdCard/index.tsx","utils/functions.ts","components/organisms/CdCardList/index.tsx","containers/CdsContainer/store/actionTypes.ts","components/atoms/Background/TopLeftBackground/index.tsx","components/atoms/Buttons/TabButton/index.tsx","components/atoms/Icons/MenuDownIcon.tsx","components/atoms/Icons/MenuUpIcon.tsx","components/molecules/TabMenu/index.tsx","components/templates/Cds/index.tsx","containers/CdsContainer/store/actions.ts","containers/CdsContainer/index.tsx","containers/CdsContainer/store/reducers.ts","stores/appStore.ts","App.tsx","serviceWorker.ts","index.tsx","components/molecules/CdCard/CdCard.module.scss"],"names":["module","exports","toggle-button","toggle-button-icon","menu","toggle-button-text","dropdown","container","pattern-one","triangle-cut","button","CdsCurrentPage","CdType","SongType","FocusPerformersType","FetchStatus","Card","posed","div","enter","y","opacity","exit","CdCard","props","react","className","styles","artwork","src","cd","artworks","urls","medium","alt","title","text","number","num","remainderByTen","remainderByHundred","toOrdinalNumber","cdsActionTypes","CardListContainer","staggerChildren","beforeChildren","afterChildren","CdCardList","react_pose_es","cds","length","currentPage","Single","key","map","CdCard_CdCard","toString","TopLeftBackground","TabButton","Link","to","concat","children","onClick","handleHideDropdown","MenuDownIcon","width","height","viewBox","d","fill","MenuUpIcon","MenuIcon","DropDownMenu","TabMenu","_useState","useState","_useState2","Object","slicedToArray","isDropdownOpen","toggleDropDown","handleToggleDropdown","react_default","a","createElement","MenuUpIcon_MenuUpIcon","MenuDownIcon_MenuDownIcon","items","item","TabButton_TabButton","pages","Album","Cds","TopLeftBackground_TopLeftBackground","TabMenu_TabMenu","CdCardList_CdCardList","CdsContianer","connect","state","dispatch","fetchSingles","type","FETCH_SINGLES_PENDING","fetch","then","res","json","data","FETCH_SINGLES_FULFILLED","payload","catch","err","FETCH_SINGLES_REJECTED","fetchAlbums","FETCH_ALBUMS_PENDING","FETCH_ALBUMS_FULFILLED","FETCH_ALBUMS_REJECTED","useEffect","singles","fetchStatus","None","albums","cdsContents","match","params","Cds_Cds","handleClickSwitch","switchCdsPage","initialCdsState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","Pending","Rejected","Fulfilled","slice","sort","itemA","itemB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","store","createStore","App","es","BrowserRouter","basename","process","Switch","Route","exact","path","component","Redirect","from","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","document","getElementById","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f7b4bebe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"TabMenu_toggle-button__1jb9k\",\"toggle-button-icon\":\"TabMenu_toggle-button-icon__1j57g\",\"menu\":\"TabMenu_menu__6WjUJ\",\"toggle-button-text\":\"TabMenu_toggle-button-text__13iP_\",\"dropdown\":\"TabMenu_dropdown__3hq_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CdCardList_container__2x2wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pattern-one\":\"TopLeftBackground_pattern-one__1dqSM\",\"triangle-cut\":\"TopLeftBackground_triangle-cut__1KqQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cds_container__3im-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TabButton_button__1zth4\"};","export enum CdsCurrentPage {\r\n  Single = \"singles\",\r\n  Album = \"albums\"\r\n}\r\n\r\nexport enum CdType {\r\n  A = \"A\",\r\n  B = \"B\",\r\n  C = \"C\",\r\n  D = \"D\",\r\n  T = \"T\",\r\n  L = \"Limited\"\r\n}\r\n\r\nexport enum SongType {\r\n  None = \"none\",\r\n  Title = \"title\",\r\n  Coupling = \"coupling\",\r\n  Under = \"under\",\r\n  Unit = \"unit\",\r\n  Solo = \"solo\",\r\n  FirstGeneration = \"first generation\",\r\n  SecondGeneration = \"second generation\",\r\n  ThirdGeneration = \"third generation\"\r\n}\r\n\r\nexport enum FocusPerformersType {\r\n  Center = \"center\",\r\n  Solo = \"solo\",\r\n  Unit = \"unit\",\r\n  None = \"\"\r\n}\r\n\r\nexport enum FetchStatus {\r\n  None,\r\n  Rejected,\r\n  Pending,\r\n  Fulfilled\r\n}\r\n","import * as React from \"react\";\r\nimport posed from \"react-pose\";\r\nimport styles from \"./CdCard.module.scss\";\r\nimport { ISingle } from \"../../../models/ISingle\";\r\nimport { IAlbum } from \"../../../models/IAlbum\";\r\nimport { toOrdinalNumber } from \"../../../utils/functions\";\r\n\r\nconst Card = posed.div({\r\n  enter: { y: 0, opacity: 1 },\r\n  exit: { y: 50, opacity: 0 }\r\n});\r\n\r\ntype ICdProps = {\r\n  cd: ISingle | IAlbum;\r\n};\r\n\r\nexport const CdCard = (props: ICdProps) => (\r\n  <Card className={styles.container}>\r\n    <img\r\n      className={styles.artwork}\r\n      src={props.cd.artworks[0].urls.medium}\r\n      alt={props.cd.title}\r\n    />\r\n    <div className={styles.text}>\r\n      <span className={styles.number}>{toOrdinalNumber(props.cd.number)}.</span>\r\n      <span className={styles.title}>{props.cd.title}</span>\r\n    </div>\r\n  </Card>\r\n);\r\n","export const toOrdinalNumber = (num: number) => {\r\n  const remainderByTen = num % 10;\r\n  const remainderByHundred = num % 100;\r\n  if (remainderByTen === 1 && remainderByHundred !== 11) {\r\n    return num + \"st\";\r\n  }\r\n  if (remainderByTen === 2 && remainderByHundred !== 12) {\r\n    return num + \"nd\";\r\n  }\r\n  if (remainderByTen === 3 && remainderByHundred !== 13) {\r\n    return num + \"rd\";\r\n  } else {\r\n    return num + \"th\";\r\n  }\r\n};\r\n","import * as React from \"react\";\r\nimport posed, { PoseGroup } from \"react-pose\";\r\nimport styles from \"./CdCardList.module.scss\";\r\nimport { ISingle } from \"../../../models/ISingle\";\r\nimport { IAlbum } from \"../../../models/IAlbum\";\r\nimport { CdCard } from \"../../molecules/CdCard\";\r\nimport { CdsCurrentPage } from \"../../../utils/constants\";\r\n\r\nconst CardListContainer = posed.div({\r\n  enter: { staggerChildren: 30, beforeChildren: true },\r\n  exit: { staggerChildren: 25, afterChildren: true }\r\n});\r\n\r\ntype ICdCardProps = {\r\n  cds: (ISingle | IAlbum)[];\r\n  currentPage: CdsCurrentPage;\r\n};\r\n\r\nexport const CdCardList = (props: ICdCardProps) => (\r\n  <PoseGroup>\r\n    {props.cds.length !== 0 && (props.currentPage === CdsCurrentPage.Single ? (\r\n      <CardListContainer key=\"single-cards\" className={styles.container}>\r\n        {props.cds.map((cd: ISingle | IAlbum) => (\r\n          <CdCard key={props.currentPage + cd.number.toString()} cd={cd} />\r\n        ))}\r\n      </CardListContainer>\r\n    ) : (\r\n      <CardListContainer key=\"album-cards\" className={styles.container}>\r\n        {props.cds.map((cd: ISingle | IAlbum) => (\r\n          <CdCard key={props.currentPage + cd.number.toString()} cd={cd} />\r\n        ))}\r\n      </CardListContainer>\r\n    ))}\r\n  </PoseGroup>\r\n);\r\n","export enum cdsActionTypes {\r\n  FETCH_SINGLES = \"FETCH_SINGLES\",\r\n  FETCH_SINGLES_PENDING = \"FETCH_SINGLES_PENDING\",\r\n  FETCH_SINGLES_REJECTED = \"FETCH_SINGLES_REJECTED\",\r\n  FETCH_SINGLES_FULFILLED = \"FETCH_SINGLES_FULFILLED\",\r\n  FETCH_ALBUMS = \"FETCH_ALBUMS\",\r\n  FETCH_ALBUMS_PENDING = \"FETCH_ALBUMS_PENDING\",\r\n  FETCH_ALBUMS_REJECTED = \"FETCH_ALBUMS_REJECTED\",\r\n  FETCH_ALBUMS_FULFILLED = \"FETCH_ALBUMS_FULFILLED\"\r\n}\r\n","import * as React from \"react\";\r\nimport styles from \"./TopLeftBackground.module.scss\";\r\n\r\nexport const TopLeftBackground = () => (\r\n  <div className={styles[\"pattern-one\"]}>\r\n    <div className={styles[\"triangle-cut\"]} />\r\n  </div>\r\n);\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./TabButton.module.scss\";\r\nimport { CdsCurrentPage } from \"../../../../utils/constants\";\r\n\r\ntype ITabButtonProps = {\r\n  children: CdsCurrentPage;\r\n  handleHideDropdown(): void;\r\n};\r\n\r\nexport const TabButton = (props: ITabButtonProps) => (\r\n  <Link to={`/cds/${props.children}`}>\r\n    <button\r\n      className={styles.button}\r\n      onClick={props.handleHideDropdown}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  </Link>\r\n);\r\n","import * as React from \"react\";\r\n\r\nexport const MenuDownIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n  </svg>\r\n);\r\n","import * as React from \"react\";\r\n\r\nexport const MenuUpIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport posed, { PoseGroup } from \"react-pose\";\r\nimport styles from \"./TabMenu.module.scss\";\r\nimport { TabButton } from \"../../atoms/Buttons/TabButton\";\r\nimport { CdsCurrentPage } from \"../../../utils/constants\";\r\nimport { MenuDownIcon } from \"../../atoms/Icons/MenuDownIcon\";\r\nimport { MenuUpIcon } from \"../../atoms/Icons/MenuUpIcon\";\r\n\r\nconst MenuIcon = posed.div({\r\n  enter: { opacity: 1 },\r\n  exit: { opacity: 0 }\r\n});\r\n\r\nconst DropDownMenu = posed.div({\r\n  enter: {\r\n    opacity: 1,\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    y: -20\r\n  }\r\n});\r\n\r\ntype ITabMenuProps = {\r\n  items: CdsCurrentPage[];\r\n  currentPage: CdsCurrentPage;\r\n};\r\n\r\nexport const TabMenu = (props: ITabMenuProps) => {\r\n  const [isDropdownOpen, toggleDropDown] = useState(false);\r\n\r\n  const handleToggleDropdown = () => {\r\n    toggleDropDown(!isDropdownOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <button\r\n        className={styles[\"toggle-button\"]}\r\n        onClick={handleToggleDropdown}\r\n      >\r\n        <span className={styles[\"toggle-button-text\"]}>\r\n          {props.currentPage}\r\n        </span>\r\n        <div className={styles[\"toggle-button-icon\"]}>\r\n          <PoseGroup>\r\n            {isDropdownOpen ? (\r\n              <MenuIcon key=\"menu-up\">\r\n                <MenuUpIcon />\r\n              </MenuIcon>\r\n            ) : (\r\n              <MenuIcon key=\"menu-down\">\r\n                <MenuDownIcon />\r\n              </MenuIcon>\r\n            )}\r\n          </PoseGroup>\r\n        </div>\r\n      </button>\r\n      <PoseGroup>\r\n        {isDropdownOpen && (\r\n          <DropDownMenu key=\"drop-down-menu\" className={styles.dropdown}>\r\n            {props.items.map((item: CdsCurrentPage) => (\r\n              <li key={item}>\r\n                <TabButton\r\n                  handleHideDropdown={handleToggleDropdown}\r\n                >\r\n                  {item}\r\n                </TabButton>\r\n              </li>\r\n            ))}\r\n          </DropDownMenu>\r\n        )}\r\n      </PoseGroup>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styles from \"./Cds.module.scss\";\r\nimport { ISingle } from \"../../../models/ISingle\";\r\nimport { IAlbum } from \"../../../models/IAlbum\";\r\nimport { CdCardList } from \"../../organisms/CdCardList\";\r\nimport { TopLeftBackground } from \"../../atoms/Background/TopLeftBackground\";\r\nimport { TabMenu } from \"../../molecules/TabMenu\";\r\nimport { CdsCurrentPage } from \"../../../utils/constants\";\r\n\r\ntype ICdsProps = {\r\n  cds: (ISingle | IAlbum)[];\r\n  currentPage: CdsCurrentPage;\r\n  handleClickSwitch(choice: string): void;\r\n};\r\n\r\nconst pages: CdsCurrentPage[] = [CdsCurrentPage.Single, CdsCurrentPage.Album];\r\n\r\nexport const Cds = (props: ICdsProps) => (\r\n  <div className={styles.container}>\r\n    <TopLeftBackground />\r\n    <TabMenu\r\n      items={pages}\r\n      currentPage={props.currentPage}\r\n    />\r\n    <CdCardList cds={props.cds} currentPage={props.currentPage} />\r\n  </div>\r\n);\r\n","import { cdsActionTypes } from \"./actionTypes\";\r\nimport { ISingle } from \"../../../models/ISingle\";\r\nimport { IAlbum } from \"../../../models/IAlbum\";\r\nimport { Dispatch } from \"react\";\r\n\r\nexport type cdsActions =\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED;\r\n      payload: ISingle[];\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED;\r\n      payload: IAlbum[];\r\n    };\r\n\r\n// Action Creators\r\n\r\nexport const fetchSingles = () => (dispatch: Dispatch<any>): Promise<void> => {\r\n  dispatch({ type: cdsActionTypes.FETCH_SINGLES_PENDING });\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/singles.json\"\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      dispatch({\r\n        type: cdsActionTypes.FETCH_SINGLES_FULFILLED,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: cdsActionTypes.FETCH_SINGLES_REJECTED\r\n      });\r\n    });\r\n};\r\n\r\nexport const fetchAlbums = () => (dispatch: Dispatch<any>): Promise<void> => {\r\n  dispatch({ type: cdsActionTypes.FETCH_ALBUMS_PENDING });\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/albums.json\"\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      dispatch({\r\n        type: cdsActionTypes.FETCH_ALBUMS_FULFILLED,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: cdsActionTypes.FETCH_ALBUMS_REJECTED\r\n      });\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Cds } from \"../../components/templates/Cds\";\r\nimport { fetchSingles, fetchAlbums } from \"./store/actions\";\r\nimport { CdsCurrentPage, FetchStatus } from \"../../utils/constants\";\r\nimport { ISingle } from \"../../models/ISingle\";\r\nimport { IAlbum } from \"../../models/IAlbum\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\ntype MatchParams = {\r\n  type: CdsCurrentPage;\r\n};\r\n\r\nexport type ICdsContainerProps = RouteComponentProps<MatchParams> & {\r\n  cds: {\r\n    singles: {\r\n      data: ISingle[];\r\n      fetchStatus: FetchStatus;\r\n    };\r\n    albums: {\r\n      data: IAlbum[];\r\n      fetchStatus: FetchStatus;\r\n    };\r\n  };\r\n  currentPage: CdsCurrentPage;\r\n  switchCdsPage(page: CdsCurrentPage): void;\r\n  fetchSingles(): void;\r\n  fetchAlbums(): void;\r\n};\r\n\r\nlet counter = 0;\r\n\r\nconst CdsContainer = (props: ICdsContainerProps) => {\r\n  useEffect(() => {\r\n    if (\r\n      props.cds.singles.fetchStatus === FetchStatus.None ||\r\n      props.cds.albums.fetchStatus === FetchStatus.None\r\n    ) {\r\n      props.fetchSingles();\r\n      props.fetchAlbums();\r\n    }\r\n  }, [props.cds.singles.fetchStatus, props.cds.albums.fetchStatus]);\r\n\r\n  const currentPage = props.match.params.type;\r\n\r\n  let cdsContents: ISingle[] | IAlbum[];\r\n  switch (currentPage) {\r\n    case CdsCurrentPage.Single:\r\n      cdsContents = props.cds.singles.data;\r\n      break;\r\n    case CdsCurrentPage.Album:\r\n      cdsContents = props.cds.albums.data;\r\n      break;\r\n    default:\r\n      cdsContents = [];\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Cds\r\n      cds={cdsContents}\r\n      currentPage={currentPage}\r\n      handleClickSwitch={props.switchCdsPage}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  cds: state.cds,\r\n  currentPage: state.cds.currentPage\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n  fetchSingles: () => dispatch(fetchSingles()),\r\n  fetchAlbums: () => dispatch(fetchAlbums())\r\n});\r\n\r\nexport const CdsContianer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CdsContainer);\r\n","import { cdsActions } from \"./actions\";\r\nimport { cdsActionTypes } from \"./actionTypes\";\r\nimport { FetchStatus } from \"../../../utils/constants\";\r\nimport { ISingle } from \"../../../models/ISingle\";\r\nimport { IAlbum } from \"../../../models/IAlbum\";\r\n\r\nexport type ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus;\r\n    data: ISingle[];\r\n  };\r\n  albums: {\r\n    fetchStatus: FetchStatus;\r\n    data: IAlbum[];\r\n  };\r\n};\r\n\r\nexport const initialCdsState: ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: []\r\n  },\r\n  albums: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: []\r\n  }\r\n};\r\n\r\nexport const cdsReducer = (\r\n  state: ICdsState = initialCdsState,\r\n  action: cdsActions\r\n) => {\r\n  switch (action.type) {\r\n    case cdsActionTypes.FETCH_SINGLES_PENDING:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.singles.data\r\n        }\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_REJECTED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.singles.data\r\n        }\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_FULFILLED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload\r\n            .slice()\r\n            .sort(\r\n              (itemA: ISingle, itemB: ISingle) => itemB.number - itemA.number\r\n            )\r\n        }\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_PENDING:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.albums.data\r\n        }\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_REJECTED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.albums.data\r\n        }\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_FULFILLED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload\r\n            .slice()\r\n            .sort((itemA: IAlbum, itemB: IAlbum) => itemB.number - itemA.number)\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n  Reducer\r\n} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { cdsReducer } from \"../containers/CdsContainer/store/reducers\";\r\nimport { IRootState } from \"./state\";\r\nimport promise from \"redux-promise-middleware\";\r\n\r\nconst rootReducer: Reducer<IRootState> = combineReducers({\r\n  cds: cdsReducer\r\n});\r\n\r\n// For Redux devtool in Chrome.\r\nconst composeEnhancers =\r\n  (<any>window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = applyMiddleware(promise(), thunk);\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(middleware)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { CdsContianer } from \"./containers/CdsContainer\";\r\nimport \"./App.scss\";\r\nimport { store } from \"./stores/appStore\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/cds/:type\" component={CdsContianer} />\r\n            <Redirect from=\"/\" to=\"/cds/singles\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"CdCard_title__jadns\",\"container\":\"CdCard_container__2hHGw\",\"artwork\":\"CdCard_artwork__19UBe\",\"text\":\"CdCard_text__1xy3x\",\"number\":\"CdCard_number__2jOJd\"};"],"sourceRoot":""}