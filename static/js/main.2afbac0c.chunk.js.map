{"version":3,"sources":["components/molecules/CdCard/CdCard.module.scss","components/atoms/Background/TopLeftBackground/TopLeftBackground.module.scss","components/atoms/ImagePlaceholder/ImagePlaceholder.module.scss","components/atoms/Buttons/TabButton/TabButton.module.scss","components/organisms/CdCardList/CdCardList.module.scss","components/molecules/TabMenu/TabMenu.module.scss","utils/constants.ts","components/atoms/ImagePlaceholder/index.tsx","components/molecules/CdCard/index.tsx","components/organisms/CdCardList/index.tsx","containers/CdsContainer/store/actionTypes.ts","components/atoms/Background/TopLeftBackground/index.tsx","components/atoms/Buttons/TabButton/index.tsx","components/atoms/Icons/MenuDownIcon.tsx","components/atoms/Icons/MenuUpIcon.tsx","components/molecules/TabMenu/index.tsx","utils/fetch.ts","containers/CdsContainer/index.tsx","containers/CdsContainer/store/actions.ts","components/templates/Cds/index.tsx","containers/CdsContainer/store/reducers.ts","stores/appStore.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","text","number","title","container","artwork-container","artwork","pattern-one","triangle-cut","button","enter","enter-active","exit","exit-active","toggle-button","toggle-button-icon","menu","toggle-button-text","dropdown","CdsCurrentPage","CdType","SongType","FocusPerformersType","FetchStatus","ImagePlaceholder","react","className","styles","CdCard","props","React","forceCheck","lib_default","a","placeholder","ImagePlaceholder_ImagePlaceholder","offset","src","cd","artworks","urls","medium","alt","cdsActionTypes","CdCardList","singles","length","albums","cjs","in","currentPage","Single","timeout","classNames","enterActive","exitActive","unmountOnExit","map","single","CdCard_CdCard","key","toString","Album","album","TopLeftBackground","TabButton","Link","to","concat","children","onClick","handleHideDropdown","MenuDownIcon","width","height","viewBox","d","fill","MenuUpIcon","TabMenu","_React$useState","_React$useState2","Object","slicedToArray","isDropdownOpen","toggleDropDown","handleToggleDropdown","MenuUpIcon_MenuUpIcon","MenuDownIcon_MenuDownIcon","items","item","TabButton_TabButton","fetchGet","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","fetch","abrupt","sent","json","stop","this","_x","apply","arguments","CdsContainer","connect","state","cds","dispatch","fetchSingles","data","sortedData","type","FETCH_SINGLES_PENDING","slice","sort","itemA","itemB","FETCH_SINGLES_FULFILLED","payload","t0","FETCH_SINGLES_REJECTED","console","log","fetchAlbums","_ref2","_callee2","_context2","FETCH_ALBUMS_PENDING","FETCH_ALBUMS_FULFILLED","FETCH_ALBUMS_REJECTED","_x2","fetchStatus","None","pages","match","params","TopLeftBackground_TopLeftBackground","TabMenu_TabMenu","CdCardList_CdCardList","initialCdsState","rootReducer","combineReducers","undefined","action","objectSpread","Pending","Rejected","Fulfilled","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","store","createStore","App","react_default","createElement","es","BrowserRouter","basename","process","Switch","Route","exact","path","component","Redirect","from","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2afbac0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"CdCard_text__1xy3x\",\"number\":\"CdCard_number__2jOJd\",\"title\":\"CdCard_title__jadns\",\"container\":\"CdCard_container__2hHGw\",\"artwork-container\":\"CdCard_artwork-container__2sTJp\",\"artwork\":\"CdCard_artwork__19UBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pattern-one\":\"TopLeftBackground_pattern-one__1dqSM\",\"triangle-cut\":\"TopLeftBackground_triangle-cut__1KqQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImagePlaceholder_container__34YbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TabButton_button__1zth4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CdCardList_container__2x2wK\",\"enter\":\"CdCardList_enter__2ipZC\",\"enter-active\":\"CdCardList_enter-active__1uXhY\",\"exit\":\"CdCardList_exit__2oxtE\",\"exit-active\":\"CdCardList_exit-active__2vYoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"TabMenu_toggle-button__1jb9k\",\"toggle-button-icon\":\"TabMenu_toggle-button-icon__1j57g\",\"menu\":\"TabMenu_menu__6WjUJ\",\"toggle-button-text\":\"TabMenu_toggle-button-text__13iP_\",\"dropdown\":\"TabMenu_dropdown__3hq_O\",\"enter\":\"TabMenu_enter__1szuV\",\"enter-active\":\"TabMenu_enter-active__3AiJE\",\"exit\":\"TabMenu_exit__1Pw9u\",\"exit-active\":\"TabMenu_exit-active__3uare\"};","export enum CdsCurrentPage {\r\n  Single = 'singles',\r\n  Album = 'albums',\r\n}\r\n\r\nexport enum CdType {\r\n  A = 'A',\r\n  B = 'B',\r\n  C = 'C',\r\n  D = 'D',\r\n  T = 'T',\r\n  L = 'Limited',\r\n}\r\n\r\nexport enum SongType {\r\n  None = 'none',\r\n  Title = 'title',\r\n  Coupling = 'coupling',\r\n  Under = 'under',\r\n  Unit = 'unit',\r\n  Solo = 'solo',\r\n  FirstGeneration = 'first generation',\r\n  SecondGeneration = 'second generation',\r\n  ThirdGeneration = 'third generation',\r\n}\r\n\r\nexport enum FocusPerformersType {\r\n  Center = 'center',\r\n  Solo = 'solo',\r\n  Unit = 'unit',\r\n  None = '',\r\n}\r\n\r\nexport enum FetchStatus {\r\n  None,\r\n  Rejected,\r\n  Pending,\r\n  Fulfilled,\r\n}\r\n","import * as React from 'react';\r\nimport styles from './ImagePlaceholder.module.scss';\r\n\r\nexport const ImagePlaceholder = () => <div className={styles.container} />;\r\n","import * as React from 'react';\r\nimport styles from './CdCard.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport LazyLoad, { forceCheck } from 'react-lazyload';\r\nimport { ImagePlaceholder } from '../../atoms/ImagePlaceholder';\r\n\r\ninterface ICdProps {\r\n  cd: ISingle | IAlbum;\r\n}\r\n\r\nexport const CdCard = (props: ICdProps) => {\r\n  React.useEffect(() => {\r\n    forceCheck();\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <LazyLoad placeholder={<ImagePlaceholder />} offset={100}>\r\n        <div className={styles['artwork-container']}>\r\n          <img className={styles.artwork} src={props.cd.artworks[0].urls.medium} alt={props.cd.title} />\r\n        </div>\r\n      </LazyLoad>\r\n      <div className={styles.text}>\r\n        <span>\r\n          <span className={styles.number}>{props.cd.number}.</span>\r\n          <span className={styles.title}>{props.cd.title}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './CdCardList.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { CdCard } from '../../molecules/CdCard';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\n\r\ninterface ICdCardProps {\r\n  singles: ISingle[];\r\n  albums: IAlbum[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const CdCardList = (props: ICdCardProps) => {\r\n  if (props.singles.length !== 0 || props.albums.length !== 0) {\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={props.currentPage === CdsCurrentPage.Single}\r\n          timeout={300}\r\n          classNames={{\r\n            enter: styles['enter'],\r\n            enterActive: styles['enter-active'],\r\n            exit: styles['exit'],\r\n            exitActive: styles['exit-active'],\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.container}>\r\n            {props.singles.map((single: ISingle) => (\r\n              <CdCard key={CdsCurrentPage.Single + single.number.toString()} cd={single} />\r\n            ))}\r\n          </div>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={props.currentPage === CdsCurrentPage.Album}\r\n          timeout={300}\r\n          classNames={{\r\n            enter: styles['enter'],\r\n            enterActive: styles['enter-active'],\r\n            exit: styles['exit'],\r\n            exitActive: styles['exit-active'],\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.container}>\r\n            {props.albums.map((album: IAlbum) => (\r\n              <CdCard key={CdsCurrentPage.Album + album.number.toString()} cd={album} />\r\n            ))}\r\n          </div>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","export enum cdsActionTypes {\r\n  FETCH_SINGLES = 'FETCH_SINGLES',\r\n  FETCH_SINGLES_PENDING = 'FETCH_SINGLES_PENDING',\r\n  FETCH_SINGLES_REJECTED = 'FETCH_SINGLES_REJECTED',\r\n  FETCH_SINGLES_FULFILLED = 'FETCH_SINGLES_FULFILLED',\r\n  FETCH_ALBUMS = 'FETCH_ALBUMS',\r\n  FETCH_ALBUMS_PENDING = 'FETCH_ALBUMS_PENDING',\r\n  FETCH_ALBUMS_REJECTED = 'FETCH_ALBUMS_REJECTED',\r\n  FETCH_ALBUMS_FULFILLED = 'FETCH_ALBUMS_FULFILLED',\r\n}\r\n","import * as React from 'react';\r\nimport styles from './TopLeftBackground.module.scss';\r\n\r\nexport const TopLeftBackground = () => (\r\n  <div className={styles['pattern-one']}>\r\n    <div className={styles['triangle-cut']} />\r\n  </div>\r\n);\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './TabButton.module.scss';\r\nimport { CdsCurrentPage } from '../../../../utils/constants';\r\n\r\ninterface ITabButtonProps {\r\n  children: CdsCurrentPage;\r\n  handleHideDropdown(): void;\r\n}\r\n\r\nexport const TabButton = (props: ITabButtonProps) => (\r\n  <Link to={`/cds/${props.children}`}>\r\n    <button className={styles.button} onClick={props.handleHideDropdown}>\r\n      {props.children}\r\n    </button>\r\n  </Link>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuDownIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuUpIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './TabMenu.module.scss';\r\nimport { TabButton } from '../../atoms/Buttons/TabButton';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\nimport { MenuDownIcon } from '../../atoms/Icons/MenuDownIcon';\r\nimport { MenuUpIcon } from '../../atoms/Icons/MenuUpIcon';\r\ninterface ITabMenuProps {\r\n  items: CdsCurrentPage[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const TabMenu = (props: ITabMenuProps) => {\r\n  const [isDropdownOpen, toggleDropDown] = React.useState(false);\r\n\r\n  const handleToggleDropdown = React.useCallback(() => {\r\n    toggleDropDown(!isDropdownOpen);\r\n  }, [toggleDropDown, isDropdownOpen]);\r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <button className={styles['toggle-button']} onClick={handleToggleDropdown}>\r\n        <span className={styles['toggle-button-text']}>{props.currentPage}</span>\r\n        <div className={styles['toggle-button-icon']}>\r\n          {isDropdownOpen ? (\r\n            <div key=\"menu-up\">\r\n              <MenuUpIcon />\r\n            </div>\r\n          ) : (\r\n            <div key=\"menu-down\">\r\n              <MenuDownIcon />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </button>\r\n      <CSSTransition\r\n        in={isDropdownOpen}\r\n        timeout={200}\r\n        classNames={{\r\n          enter: styles['enter'],\r\n          enterActive: styles['enter-active'],\r\n          exit: styles['exit'],\r\n          exitActive: styles['exit-active'],\r\n        }}\r\n        unmountOnExit\r\n      >\r\n        <div className={styles.dropdown}>\r\n          {props.items.map((item: CdsCurrentPage) => (\r\n            <li key={item}>\r\n              <TabButton handleHideDropdown={handleToggleDropdown}>{item}</TabButton>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n","export const fetchGet = async (url: string): Promise<any> => (await fetch(url)).json();\r\n","import { connect } from 'react-redux';\r\nimport { Cds } from '../../components/templates/Cds';\r\nimport { fetchSingles, fetchAlbums } from './store/actions';\r\nimport { Dispatch } from 'redux';\r\nimport { IRootState } from '../../stores/state';\r\n\r\nexport const CdsContainer = connect(\r\n  (state: IRootState) => ({\r\n    cds: state.cds,\r\n  }),\r\n  (dispatch: Dispatch<any>) => ({\r\n    fetchSingles: () => dispatch(fetchSingles()),\r\n    fetchAlbums: () => dispatch(fetchAlbums()),\r\n  }),\r\n)(Cds);\r\n","import { cdsActionTypes } from './actionTypes';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { Dispatch } from 'react';\r\nimport { fetchGet } from '../../../utils/fetch';\r\n\r\nexport type cdsActions =\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED;\r\n      payload: ISingle[];\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED;\r\n      payload: IAlbum[];\r\n    };\r\n\r\nexport const fetchSingles = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch({ type: cdsActionTypes.FETCH_SINGLES_PENDING });\r\n\r\n  try {\r\n    const data = await fetchGet(\r\n      'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/singles.json',\r\n    );\r\n\r\n    const sortedData = data.slice().sort((itemA: ISingle, itemB: ISingle) => itemB.number - itemA.number);\r\n\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n\r\nexport const fetchAlbums = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch({ type: cdsActionTypes.FETCH_ALBUMS_PENDING });\r\n  try {\r\n    const data = await fetchGet(\r\n      'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/albums.json',\r\n    );\r\n\r\n    const sortedData = data.slice().sort((itemA: IAlbum, itemB: IAlbum) => itemB.number - itemA.number);\r\n\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { ICdsState } from '../../../containers/CdsContainer/store/reducers';\r\nimport { CdCardList } from '../../organisms/CdCardList';\r\nimport { TopLeftBackground } from '../../atoms/Background/TopLeftBackground';\r\nimport { TabMenu } from '../../molecules/TabMenu';\r\nimport { CdsCurrentPage, FetchStatus } from '../../../utils/constants';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ntype IMatchParams = {\r\n  type: CdsCurrentPage;\r\n};\r\ninterface ICdsProps extends RouteComponentProps<IMatchParams> {\r\n  cds: ICdsState;\r\n  fetchSingles(): void;\r\n  fetchAlbums(): void;\r\n}\r\n\r\nexport const Cds = (props: ICdsProps) => {\r\n  React.useEffect(() => {\r\n    if (props.cds.singles.fetchStatus === FetchStatus.None) {\r\n      props.fetchSingles();\r\n    }\r\n    if (props.cds.albums.fetchStatus === FetchStatus.None) {\r\n      props.fetchAlbums();\r\n    }\r\n  }, []);\r\n\r\n  const pages = [CdsCurrentPage.Single, CdsCurrentPage.Album];\r\n  const currentPage = props.match.params.type;\r\n\r\n  return (\r\n    <div>\r\n      <TopLeftBackground />\r\n      <TabMenu items={pages} currentPage={currentPage} />\r\n      <CdCardList singles={props.cds.singles.data} albums={props.cds.albums.data} currentPage={currentPage} />\r\n    </div>\r\n  );\r\n};\r\n","import { cdsActions } from './actions';\r\nimport { cdsActionTypes } from './actionTypes';\r\nimport { FetchStatus } from '../../../utils/constants';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\n\r\nexport type ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus;\r\n    data: ISingle[];\r\n  };\r\n  albums: {\r\n    fetchStatus: FetchStatus;\r\n    data: IAlbum[];\r\n  };\r\n};\r\n\r\nexport const initialCdsState: ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n  albums: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n};\r\n\r\nexport const cdsReducer = (state: ICdsState = initialCdsState, action: cdsActions) => {\r\n  switch (action.type) {\r\n    case cdsActionTypes.FETCH_SINGLES_PENDING:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_REJECTED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_FULFILLED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_PENDING:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_REJECTED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_FULFILLED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cdsReducer } from '../containers/CdsContainer/store/reducers';\r\nimport { IRootState } from './state';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nconst rootReducer: Reducer<IRootState> = combineReducers({\r\n  cds: cdsReducer,\r\n});\r\n\r\n// For Redux devtool in Chrome.\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = applyMiddleware(promise(), thunk);\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(middleware));\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { CdsContainer } from './containers/CdsContainer';\r\nimport './App.scss';\r\nimport { store } from './stores/appStore';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/cds/:type\" component={CdsContainer} />\r\n            <Redirect from=\"/\" to=\"/cds/singles\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}