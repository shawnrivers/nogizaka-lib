{"version":3,"sources":["components/molecules/TabMenu/TabMenu.module.scss","components/organisms/CdCardList/CdCardList.module.scss","components/atoms/Background/TopLeftBackground/TopLeftBackground.module.scss","components/templates/Cds/Cds.module.scss","components/atoms/Buttons/TabButton/TabButton.module.scss","utils/constants.ts","components/molecules/CdCard/index.tsx","utils/functions.ts","components/organisms/CdCardList/index.tsx","containers/CdsContainer/store/actionTypes.ts","components/atoms/Background/TopLeftBackground/index.tsx","components/atoms/Buttons/TabButton/index.tsx","components/atoms/Icons/MenuDownIcon.tsx","components/atoms/Icons/MenuUpIcon.tsx","components/molecules/TabMenu/index.tsx","components/templates/Cds/index.tsx","containers/CdsContainer/store/actions.ts","containers/CdsContainer/index.tsx","containers/CdsContainer/store/reducers.ts","stores/appStore.ts","App.tsx","serviceWorker.ts","index.tsx","components/molecules/CdCard/CdCard.module.scss"],"names":["module","exports","toggle-button","toggle-button-icon","menu","toggle-button-text","dropdown","container","pattern-one","triangle-cut","button","CdsCurrentPage","CdType","SongType","FocusPerformersType","FetchStatus","Card","posed","div","enter","y","opacity","exit","CdCard","props","react","className","styles","artwork","src","cd","artworks","urls","medium","alt","title","text","number","num","remainderByTen","remainderByHundred","toOrdinalNumber","cdsActionTypes","CardListContainer","staggerChildren","beforeChildren","afterChildren","CdCardList","react_pose_es","cds","length","currentPage","Single","key","map","CdCard_CdCard","toString","TopLeftBackground","TabButton","Link","to","concat","children","onClick","handleHideDropdown","MenuDownIcon","width","height","viewBox","d","fill","MenuUpIcon","MenuIcon","DropDownMenu","TabMenu","_React$useState","React","_React$useState2","Object","slicedToArray","isDropdownOpen","toggleDropDown","handleToggleDropdown","MenuUpIcon_MenuUpIcon","MenuDownIcon_MenuDownIcon","items","item","TabButton_TabButton","pages","Album","Cds","TopLeftBackground_TopLeftBackground","TabMenu_TabMenu","CdCardList_CdCardList","CdsContianer","connect","state","dispatch","fetchSingles","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","sortedData","wrap","_context","prev","next","type","FETCH_SINGLES_PENDING","fetch","sent","json","slice","sort","itemA","itemB","FETCH_SINGLES_FULFILLED","payload","t0","FETCH_SINGLES_REJECTED","console","log","stop","this","_x","apply","arguments","fetchAlbums","_ref2","_callee2","_context2","FETCH_ALBUMS_PENDING","FETCH_ALBUMS_FULFILLED","FETCH_ALBUMS_REJECTED","_x2","singles","fetchStatus","None","albums","match","params","cdsContents","cdsCurrentPage","getCurrentPageCds","Cds_Cds","initialCdsState","rootReducer","combineReducers","undefined","action","objectSpread","Pending","Rejected","Fulfilled","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","promise","thunk","store","createStore","App","react_default","createElement","es","BrowserRouter","basename","process","Switch","Route","exact","path","component","Redirect","from","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c74682c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"TabMenu_toggle-button__1jb9k\",\"toggle-button-icon\":\"TabMenu_toggle-button-icon__1j57g\",\"menu\":\"TabMenu_menu__6WjUJ\",\"toggle-button-text\":\"TabMenu_toggle-button-text__13iP_\",\"dropdown\":\"TabMenu_dropdown__3hq_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CdCardList_container__2x2wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pattern-one\":\"TopLeftBackground_pattern-one__1dqSM\",\"triangle-cut\":\"TopLeftBackground_triangle-cut__1KqQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cds_container__3im-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TabButton_button__1zth4\"};","export enum CdsCurrentPage {\r\n  Single = 'singles',\r\n  Album = 'albums',\r\n}\r\n\r\nexport enum CdType {\r\n  A = 'A',\r\n  B = 'B',\r\n  C = 'C',\r\n  D = 'D',\r\n  T = 'T',\r\n  L = 'Limited',\r\n}\r\n\r\nexport enum SongType {\r\n  None = 'none',\r\n  Title = 'title',\r\n  Coupling = 'coupling',\r\n  Under = 'under',\r\n  Unit = 'unit',\r\n  Solo = 'solo',\r\n  FirstGeneration = 'first generation',\r\n  SecondGeneration = 'second generation',\r\n  ThirdGeneration = 'third generation',\r\n}\r\n\r\nexport enum FocusPerformersType {\r\n  Center = 'center',\r\n  Solo = 'solo',\r\n  Unit = 'unit',\r\n  None = '',\r\n}\r\n\r\nexport enum FetchStatus {\r\n  None,\r\n  Rejected,\r\n  Pending,\r\n  Fulfilled,\r\n}\r\n","import * as React from 'react';\r\nimport posed from 'react-pose';\r\nimport styles from './CdCard.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { toOrdinalNumber } from '../../../utils/functions';\r\n\r\nconst Card = posed.div({\r\n  enter: { y: 0, opacity: 1 },\r\n  exit: { y: 50, opacity: 0 },\r\n});\r\n\r\ninterface ICdProps {\r\n  cd: ISingle | IAlbum;\r\n}\r\n\r\nexport const CdCard = (props: ICdProps) => (\r\n  <Card className={styles.container}>\r\n    <img className={styles.artwork} src={props.cd.artworks[0].urls.medium} alt={props.cd.title} />\r\n    <div className={styles.text}>\r\n      <span className={styles.number}>{toOrdinalNumber(props.cd.number)}.</span>\r\n      <span className={styles.title}>{props.cd.title}</span>\r\n    </div>\r\n  </Card>\r\n);\r\n","export const toOrdinalNumber = (num: number) => {\r\n  const remainderByTen = num % 10;\r\n  const remainderByHundred = num % 100;\r\n  if (remainderByTen === 1 && remainderByHundred !== 11) {\r\n    return num + 'st';\r\n  }\r\n  if (remainderByTen === 2 && remainderByHundred !== 12) {\r\n    return num + 'nd';\r\n  }\r\n  if (remainderByTen === 3 && remainderByHundred !== 13) {\r\n    return num + 'rd';\r\n  } else {\r\n    return num + 'th';\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport posed, { PoseGroup } from 'react-pose';\r\nimport styles from './CdCardList.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { CdCard } from '../../molecules/CdCard';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\n\r\nconst CardListContainer = posed.div({\r\n  enter: { staggerChildren: 30, beforeChildren: true },\r\n  exit: { staggerChildren: 25, afterChildren: true },\r\n});\r\n\r\ninterface ICdCardProps {\r\n  cds: (ISingle | IAlbum)[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const CdCardList = (props: ICdCardProps) => (\r\n  <PoseGroup>\r\n    {props.cds.length !== 0 &&\r\n      (props.currentPage === CdsCurrentPage.Single ? (\r\n        <CardListContainer key=\"single-cards\" className={styles.container}>\r\n          {props.cds.map((cd: ISingle | IAlbum) => (\r\n            <CdCard key={props.currentPage + cd.number.toString()} cd={cd} />\r\n          ))}\r\n        </CardListContainer>\r\n      ) : (\r\n        <CardListContainer key=\"album-cards\" className={styles.container}>\r\n          {props.cds.map((cd: ISingle | IAlbum) => (\r\n            <CdCard key={props.currentPage + cd.number.toString()} cd={cd} />\r\n          ))}\r\n        </CardListContainer>\r\n      ))}\r\n  </PoseGroup>\r\n);\r\n","export enum cdsActionTypes {\r\n  FETCH_SINGLES = 'FETCH_SINGLES',\r\n  FETCH_SINGLES_PENDING = 'FETCH_SINGLES_PENDING',\r\n  FETCH_SINGLES_REJECTED = 'FETCH_SINGLES_REJECTED',\r\n  FETCH_SINGLES_FULFILLED = 'FETCH_SINGLES_FULFILLED',\r\n  FETCH_ALBUMS = 'FETCH_ALBUMS',\r\n  FETCH_ALBUMS_PENDING = 'FETCH_ALBUMS_PENDING',\r\n  FETCH_ALBUMS_REJECTED = 'FETCH_ALBUMS_REJECTED',\r\n  FETCH_ALBUMS_FULFILLED = 'FETCH_ALBUMS_FULFILLED',\r\n}\r\n","import * as React from 'react';\r\nimport styles from './TopLeftBackground.module.scss';\r\n\r\nexport const TopLeftBackground = () => (\r\n  <div className={styles['pattern-one']}>\r\n    <div className={styles['triangle-cut']} />\r\n  </div>\r\n);\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './TabButton.module.scss';\r\nimport { CdsCurrentPage } from '../../../../utils/constants';\r\n\r\ninterface ITabButtonProps {\r\n  children: CdsCurrentPage;\r\n  handleHideDropdown(): void;\r\n}\r\n\r\nexport const TabButton = (props: ITabButtonProps) => (\r\n  <Link to={`/cds/${props.children}`}>\r\n    <button className={styles.button} onClick={props.handleHideDropdown}>\r\n      {props.children}\r\n    </button>\r\n  </Link>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuDownIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\n\r\nexport const MenuUpIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n","import * as React from 'react';\r\nimport posed, { PoseGroup } from 'react-pose';\r\nimport styles from './TabMenu.module.scss';\r\nimport { TabButton } from '../../atoms/Buttons/TabButton';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\nimport { MenuDownIcon } from '../../atoms/Icons/MenuDownIcon';\r\nimport { MenuUpIcon } from '../../atoms/Icons/MenuUpIcon';\r\n\r\nconst MenuIcon = posed.div({\r\n  enter: { opacity: 1 },\r\n  exit: { opacity: 0 },\r\n});\r\n\r\nconst DropDownMenu = posed.div({\r\n  enter: {\r\n    opacity: 1,\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    y: -20,\r\n  },\r\n});\r\n\r\ninterface ITabMenuProps {\r\n  items: CdsCurrentPage[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nexport const TabMenu = (props: ITabMenuProps) => {\r\n  const [isDropdownOpen, toggleDropDown] = React.useState(false);\r\n\r\n  const handleToggleDropdown = React.useCallback(() => {\r\n    toggleDropDown(!isDropdownOpen);\r\n  }, [toggleDropDown, isDropdownOpen]);\r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <button className={styles['toggle-button']} onClick={handleToggleDropdown}>\r\n        <span className={styles['toggle-button-text']}>{props.currentPage}</span>\r\n        <div className={styles['toggle-button-icon']}>\r\n          <PoseGroup>\r\n            {isDropdownOpen ? (\r\n              <MenuIcon key=\"menu-up\">\r\n                <MenuUpIcon />\r\n              </MenuIcon>\r\n            ) : (\r\n              <MenuIcon key=\"menu-down\">\r\n                <MenuDownIcon />\r\n              </MenuIcon>\r\n            )}\r\n          </PoseGroup>\r\n        </div>\r\n      </button>\r\n      <PoseGroup>\r\n        {isDropdownOpen && (\r\n          <DropDownMenu key=\"drop-down-menu\" className={styles.dropdown}>\r\n            {props.items.map((item: CdsCurrentPage) => (\r\n              <li key={item}>\r\n                <TabButton handleHideDropdown={handleToggleDropdown}>{item}</TabButton>\r\n              </li>\r\n            ))}\r\n          </DropDownMenu>\r\n        )}\r\n      </PoseGroup>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport styles from './Cds.module.scss';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { CdCardList } from '../../organisms/CdCardList';\r\nimport { TopLeftBackground } from '../../atoms/Background/TopLeftBackground';\r\nimport { TabMenu } from '../../molecules/TabMenu';\r\nimport { CdsCurrentPage } from '../../../utils/constants';\r\n\r\ninterface ICdsProps {\r\n  cds: (ISingle | IAlbum)[];\r\n  currentPage: CdsCurrentPage;\r\n}\r\n\r\nconst pages = [CdsCurrentPage.Single, CdsCurrentPage.Album];\r\n\r\nexport const Cds = (props: ICdsProps) => (\r\n  <div className={styles.container}>\r\n    <TopLeftBackground />\r\n    <TabMenu items={pages} currentPage={props.currentPage} />\r\n    <CdCardList cds={props.cds} currentPage={props.currentPage} />\r\n  </div>\r\n);\r\n","import { cdsActionTypes } from './actionTypes';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\nimport { Dispatch } from 'react';\r\n\r\nexport type cdsActions =\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED;\r\n      payload: ISingle[];\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_PENDING;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED;\r\n    }\r\n  | {\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED;\r\n      payload: IAlbum[];\r\n    };\r\n\r\n// Action Creators\r\n\r\nexport const fetchSingles = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch({ type: cdsActionTypes.FETCH_SINGLES_PENDING });\r\n\r\n  try {\r\n    const response = await fetch(\r\n      'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/singles.json',\r\n    );\r\n    const data = await response.json();\r\n\r\n    const sortedData = data.slice().sort((itemA: ISingle, itemB: ISingle) => itemB.number - itemA.number);\r\n\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_SINGLES_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_SINGLES_REJECTED,\r\n    });\r\n\r\n    console.log('Error:', err);\r\n  }\r\n};\r\n\r\nexport const fetchAlbums = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch({ type: cdsActionTypes.FETCH_ALBUMS_PENDING });\r\n  try {\r\n    const response = await fetch(\r\n      'https://raw.githubusercontent.com/shawnrivers/nogizaka-data/master/src/json/albums.json',\r\n    );\r\n    const data = await response.json();\r\n\r\n    const sortedData = data.slice().sort((itemA: IAlbum, itemB: IAlbum) => itemB.number - itemA.number);\r\n\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_ALBUMS_FULFILLED,\r\n      payload: sortedData,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: cdsActionTypes.FETCH_ALBUMS_REJECTED,\r\n    });\r\n    console.log(err);\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Cds } from '../../components/templates/Cds';\r\nimport { fetchSingles, fetchAlbums } from './store/actions';\r\nimport { CdsCurrentPage, FetchStatus } from '../../utils/constants';\r\nimport { ISingle } from '../../models/ISingle';\r\nimport { IAlbum } from '../../models/IAlbum';\r\nimport { Dispatch } from 'redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { IRootState } from '../../stores/state';\r\n\r\ntype IMatchParams = {\r\n  type: CdsCurrentPage;\r\n};\r\n\r\ntype ICds = {\r\n  singles: {\r\n    data: ISingle[];\r\n    fetchStatus: FetchStatus;\r\n  };\r\n  albums: {\r\n    data: IAlbum[];\r\n    fetchStatus: FetchStatus;\r\n  };\r\n};\r\n\r\nexport interface ICdsContainerProps extends RouteComponentProps<IMatchParams> {\r\n  cds: ICds;\r\n  currentPage: CdsCurrentPage;\r\n  fetchSingles(): void;\r\n  fetchAlbums(): void;\r\n}\r\n\r\nconst getCurrentPageCds = (cdsCurrentPage: CdsCurrentPage, cds: ICds): (ISingle | IAlbum)[] => {\r\n  switch (cdsCurrentPage) {\r\n    case CdsCurrentPage.Single:\r\n      return cds.singles.data;\r\n    case CdsCurrentPage.Album:\r\n      return cds.albums.data;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nconst CdsContainer = (props: ICdsContainerProps) => {\r\n  React.useEffect(() => {\r\n    if (props.cds.singles.fetchStatus === FetchStatus.None) {\r\n      props.fetchSingles();\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (props.cds.albums.fetchStatus === FetchStatus.None) {\r\n      props.fetchAlbums();\r\n    }\r\n  }, []);\r\n\r\n  const currentPage = props.match.params.type;\r\n  const cdsContents = React.useMemo(() => getCurrentPageCds(currentPage, props.cds), [currentPage, props.cds]);\r\n\r\n  return <Cds cds={cdsContents} currentPage={currentPage} />;\r\n};\r\n\r\nexport const CdsContianer = connect(\r\n  (state: IRootState) => ({\r\n    cds: state.cds,\r\n  }),\r\n  (dispatch: Dispatch<any>) => ({\r\n    fetchSingles: () => dispatch(fetchSingles()),\r\n    fetchAlbums: () => dispatch(fetchAlbums()),\r\n  }),\r\n)(CdsContainer);\r\n","import { cdsActions } from './actions';\r\nimport { cdsActionTypes } from './actionTypes';\r\nimport { FetchStatus } from '../../../utils/constants';\r\nimport { ISingle } from '../../../models/ISingle';\r\nimport { IAlbum } from '../../../models/IAlbum';\r\n\r\nexport type ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus;\r\n    data: ISingle[];\r\n  };\r\n  albums: {\r\n    fetchStatus: FetchStatus;\r\n    data: IAlbum[];\r\n  };\r\n};\r\n\r\nexport const initialCdsState: ICdsState = {\r\n  singles: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n  albums: {\r\n    fetchStatus: FetchStatus.None,\r\n    data: [],\r\n  },\r\n};\r\n\r\nexport const cdsReducer = (state: ICdsState = initialCdsState, action: cdsActions) => {\r\n  switch (action.type) {\r\n    case cdsActionTypes.FETCH_SINGLES_PENDING:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_REJECTED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.singles.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_SINGLES_FULFILLED:\r\n      return {\r\n        ...state,\r\n        singles: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_PENDING:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Pending,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_REJECTED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Rejected,\r\n          data: state.albums.data,\r\n        },\r\n      };\r\n    case cdsActionTypes.FETCH_ALBUMS_FULFILLED:\r\n      return {\r\n        ...state,\r\n        albums: {\r\n          fetchStatus: FetchStatus.Fulfilled,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cdsReducer } from '../containers/CdsContainer/store/reducers';\r\nimport { IRootState } from './state';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nconst rootReducer: Reducer<IRootState> = combineReducers({\r\n  cds: cdsReducer,\r\n});\r\n\r\n// For Redux devtool in Chrome.\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = applyMiddleware(promise(), thunk);\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(middleware));\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { CdsContianer } from './containers/CdsContainer';\r\nimport './App.scss';\r\nimport { store } from './stores/appStore';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <Route exact path=\"/cds/:type\" component={CdsContianer} />\r\n            <Redirect from=\"/\" to=\"/cds/singles\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"CdCard_title__jadns\",\"container\":\"CdCard_container__2hHGw\",\"artwork\":\"CdCard_artwork__19UBe\",\"text\":\"CdCard_text__1xy3x\",\"number\":\"CdCard_number__2jOJd\"};"],"sourceRoot":""}